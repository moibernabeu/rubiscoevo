for (i in 1:length(nt_trees)) nt_trees[[i]] <- rename_taxa(nt_trees[[i]], nt_taxa, key = old, value = new)
#set root
nt_trees <- root(nt_trees, "Takakia lepidozioides")
#plot density tree with selected model in black
nt_trees_p <- list(nt_trees[[1]] %>% fortify %>% mutate(tree="a"))
for (i in 2:lenght(nt_trees)) nt_trees_p[[i]] <- nt_trees[[i]] %>% fortify %>% mutate(tree="b")
for (i in 2:length(nt_trees)) nt_trees_p[[i]] <- nt_trees[[i]] %>% fortify %>% mutate(tree="b")
nt <- ggdensitree(nt_trees_p, aes(colour=tree)) +
geom_tiplab(colour='black', align = TRUE, size = 2.5) +
scale_color_manual(values = alpha(c("black", "steelblue"), c(1, .12))) +
xlim(0,0.2) +
theme(legend.position = "none")
nt
library(ggpubr)
ggarrange(plotlist = list(aa, nt), ncol = 2,
legend = NULL, labels = "auto")
setwd("")
setwd(""~/)
setwd("~/")
updateR()
install.packages("mvMORPH")
library(phytools)
## tree
tree<-pbtree(n=26,tip.label=LETTERS)
## data with signal
x1<-fastBM(tree)
## data without signal
x2<-setNames(sample(x1),names(x1))
## Pagel's lambda
## first the data with signal
lam1<-phylosig(tree,x1,method="lambda")
lam1
fitBrownian<-brownie.lite(paintSubTree(tree,tree$edge[1,1],state="1"),x1)
fitBrownian
## likelihood ratio test
LR<-2*(lam1$logL-fitBrownian$logL1)
LR
P.lr<-pchisq(LR,df=1,lower.tail=FALSE)
P.lr
library(phytools)
## tree
tree<-pbtree(n=26,tip.label=LETTERS)
## data with signal
x1<-fastBM(tree)
## data without signal
x2<-setNames(sample(x1),names(x1))
## Pagel's lambda
## first the data with signal
lam1<-phylosig(tree,x1,method="lambda")
lam1
fitBrownian<-brownie.lite(paintSubTree(tree,tree$edge[1,1],state="1"),x1)
fitBrownian
## likelihood ratio test
LR<-2*(lam1$logL-fitBrownian$logL1)
LR
P.lr<-pchisq(LR,df=1,lower.tail=FALSE)
P.lr
version("phylosignal")
package_version("phylosignal")
library(phylosignal)
package_version("phylosignal")
package_version(phylosignal)
packageVersion("phylosignal")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("KEGGREST")
library(KEGGREST)
library(KEGGREST)
library(KEGGREST)
head(keggConv("ncbi-proteinid", c("hsa:10458", "ece:Z5100")))
head(keggConv("ncbi-proteinid", c("KKK43062.1")))
dbentries <- c("Lokiarch_30170", "Pyrde_1506", "Arcpr_1634", "Ferp_1506", "Metok_0719")
keggGet(dbentries, option = c("aaseq", "ntseq", "mol", "kcf","image", "kgml"))
keggGet(dbentries, option = c("aaseq"))
keggGet(dbentries, option = c("aaseq"))
keggGet(dbentries, option = c("ntseq"))
keggGet("Lokiarch_30170", option = c("ntseq"))
es <- keggGet(c("cpd:C01290", "gl:G00092"))
es
es <- keggGet(c("cpd:C01290", "gl:G00092"), option = c("ntseq"))
keggGet("Lokiarch_30170")
keggGet(dbentries)
res <- keggGet(c("hsa:10458", "ece:Z5100"), "aaseq")
res
res <- keggGet(c("Lokiarch_30170", "ece:Z5100"), "aaseq")
res
res <- keggGet(c("hsa:10458", "ece:Z5100"), "aaseq")
res
res <- keggGet(c("hsa:10458", "ece:Z5100", "loki:30170"), "aaseq")
res
res <- keggGet(c("hsa:10458", "ece:Z5100"), "aaseq")
res
res <- keggGet(c("hsa:10458", "ece:Z5100"), "dnaseq")
res <- keggGet(c("hsa:10458", "ece:Z5100"), "ntseq")
c("Cha6605_0645", "Cyan10605_0644")
a <- c("Cha6605_0645", "Cyan10605_0644")
res <- keggGet(a, "ece:Z5100"), "ntseq")
res <- keggGet(a, "ntseq")
res <- keggGet("loki01000", "ntseq")
res
res <- keggGet("loki_01000", "ntseq")
res <- keggGet("loki:01000", "ntseq")
library(KEGGREST)
db <- c("loki:Lokiarch_30170", "pdl:Pyrde_1506", "apo:Arcpr_1634",
"fpl:Ferp_1506", "mok:Metok_0719", "tpep:A0127_03925")
keggGet(db, "aaseq")
db <- c("loki:Lokiarch_30170", "pdl:Pyrde_1506", "apo:Arcpr_1634",
"fpl:Ferp_1506", "mok:Metok_0719", "tpep:A0127_03925", "fpl:Ferp_1506", "mok:Metok_0719", "tpep:A0127_03925")
keggGet(db, "aaseq")
db <- c("loki:Lokiarch_30170", "pdl:Pyrde_1506", "apo:Arcpr_1634",
"fpl:Ferp_1506", "mok:Metok_0719", "tpep:A0127_03925",
"fpl:Ferp_1506", "mok:Metok_0719", "tpep:A0127_03925",
"fpl:Ferp_1506", "mok:Metok_0719", "tpep:A0127_03925")
keggGet(db, "aaseq")
db <- c("loki:Lokiarch_30170", "pdl:Pyrde_1506", "apo:Arcpr_1634",
"fpl:Ferp_1506", "mok:Metok_0719", "tpep:A0127_03925",
"acy:Anacy_0029", "cmp:Cha6605_0645", "cthe:Chro_5313",
"can:Cyan10605_0644", "cgc:Cyagr_0014", "cyn:Cyan7425_3422",
"dsl:Dacsa_1767", "gen:GM3709_214", "cyc:PCC7424_1367",
"hhg:XM38_011320", "len:LEP3755_50110", "mic:Mic7113_2336",
"mar:MAE_47890", "nsh:GXM_06762", "pagh:NIES204_32340",
"syc:syc0130_c", "tel:tll1506", "glj:GKIL_0669", "gvi:gvip295")
head(db)
db
db <- c("loki:Lokiarch_30170", "pdl:Pyrde_1506", "apo:Arcpr_1634",
"fpl:Ferp_1506", "mok:Metok_0719", "tpep:A0127_03925",
"acy:Anacy_0029", "cmp:Cha6605_0645", "cthe:Chro_5313",
"can:Cyan10605_0644")
db2 <-  c("cgc:Cyagr_0014", "cyn:Cyan7425_3422",
"dsl:Dacsa_1767", "gen:GM3709_214", "cyc:PCC7424_1367",
"hhg:XM38_011320", "len:LEP3755_50110", "mic:Mic7113_2336",
"mar:MAE_47890", "nsh:GXM_06762")
db3 <-  c("pagh:NIES204_32340", "syc:syc0130_c", "tel:tll1506",
"glj:GKIL_0669", "gvi:gvip295")
aa <- merge(aa1, aa2, aa3)
aa1 <- keggGet(db1, "aaseq")
aa2 <- keggGet(db2, "aaseq")
aa1 <- keggGet(db, "aaseq")
aa2 <- keggGet(db2, "aaseq")
aa3 <- keggGet(db3, "aaseq")
aa <- merge(aa1, aa2, aa3)
db1 <- c("loki:Lokiarch_30170", "pdl:Pyrde_1506", "apo:Arcpr_1634",
"fpl:Ferp_1506", "mok:Metok_0719", "tpep:A0127_03925",
"acy:Anacy_0029", "cmp:Cha6605_0645", "cthe:Chro_5313",
"can:Cyan10605_0644")
db2 <-  c("cgc:Cyagr_0014", "cyn:Cyan7425_3422",
"dsl:Dacsa_1767", "gen:GM3709_214", "cyc:PCC7424_1367",
"hhg:XM38_011320", "len:LEP3755_50110", "mic:Mic7113_2336",
"mar:MAE_47890", "nsh:GXM_06762")
db3 <-  c("pagh:NIES204_32340", "syc:syc0130_c", "tel:tll1506",
"glj:GKIL_0669", "gvi:gvip295")
aa1 <- keggGet(db1, "aaseq")
aa2 <- keggGet(db2, "aaseq")
aa3 <- keggGet(db3, "aaseq")
nt1 <- keggGet(db, "aaseq")
nt1 <- keggGet(db1, "ntseq")
nt1 <- keggGet(db1, "ntseq")
aa2 <- keggGet(db2, "ntseq")
aa3 <- keggGet(db3, "ntseq")
nt1 <- keggGet(db1, "ntseq")
nt2 <- keggGet(db2, "ntseq")
nt3 <- keggGet(db3, "ntseq")
library(BiocManager)
library(seqinr)
as.SeqFastaAA(aa1)
library(fastmap)
as.SeqFastaAA(aa1, aa2, aa3)
nt1 <- keggGet(db1, "ntseq")
as.SeqFastaAA(aa1, aa2, aa3)
aa1$`loki:Lokiarch_30170 K01601 ribulose-bisphosphate carboxylase large chain [EC:4.1.1.39] | (GenBank) rbcL; Ribulose 1,5-bisphosphate carboxylase (A)`
write.fasta(aa1)
aa1 <- keggGet(db1, "aaseq")
write.fasta(aa1)
write.fasta(aa1, file.out = "Desktop/hola")
write.fasta(aa1, file.out = "Desktop/hola", names = aa1@metadata)
library(Biostrings)
aa1 <- keggGet(db1, "aaseq")
aa1 <- keggGet(db1, "aaseq")
aa2 <- keggGet(db2, "aaseq")
aa3 <- keggGet(db3, "aaseq")
snt1 <- keggGet(db1, "ntseq")
nt2 <- keggGet(db2, "ntseq")
nt3 <- keggGet(db3, "ntseq")
readAAStringSet(aa1)
aa1@elementType
aa1@pool
aa1@ranges
aa1@metadata
aa1[[1]]
aa1[1]
aa1[1]@ranges
write.fasta(aa1)
aa1
as.data.frame(aa1)
b <- as.data.frame(aa1)
View(b)
b <- as.data.frame(aa1, aa2)
View(b)
b <- as.data.frame(aa1, aa2, aa3)
b <- as.data.frame(aa1)
b <- as.data.frame(aa1)
write.fasta(b)
write.fasta(b, file = "data")
write.fasta(b, file = "data", names = T)
library(Biostrings)
writeXStringSet(aa1, format = "fasta")
writeXStringSet(aa1, format = "fasta", "Desktop/hola")
xscat(aa1, aa2, aa3)
aa <- xscat(aa1, aa2, aa3)
aa <- xscat(aa1, aa2, aa3)
aa
aa <- xscat(c("aa1", "aa2", "aa3"))
aa
aa <- xscat(aa1, aa2, aa3)
aa
head(aa)
c(aa1, aa2)
aa <- c(aa1, aa2, aa3)
writeXStringSet(aa, format = "fasta", "Desktop/hola")
nt1 <- keggGet(db1, "ntseq")
nt2 <- keggGet(db2, "ntseq")
nt3 <- keggGet(db3, "ntseq")
nt <- c(nt1, nt2, nt3)
nt <- c(nt1, nt2, nt3); nt
aa <- c(aa1, aa2, aa3); aa
writeXStringSet(aa, format = "fasta", "Desktop/nt_kegg.fa")
nt <- c(nt1, nt2, nt3); nt
install.packages("phangorn")
library(phangorn)
citation("phangorn")
library(readxl)
corpus <- read_excel("Downloads/Alícia/Alícia_R_1/humor.xlsx")
humor <- read_excel("Downloads/Alícia/Alícia_R_1/humor.xlsx")
View(corpus)
humor <- read_excel("Downloads/Alícia/Alícia_R_1/humor.xlsx")
head(humor)
for (i in 1:length(humor)) {
if (is.character(humor[[i]])) {
humor[[i]] <- as.factor[[i]]
}
}
humor[[i]]
humor[[2]]
if (is.character(humor[[i]])) {
humor[[i]] <- as.factor[[i]]
}
if (is.character(humor[[i]])) {
humor[[i]] <- as.factor[[i]]
}
humor[i]
humor[[1]]
as.factor[[i]]
as.factor[i]
for (i in 1:length(humor)) {
if (is.character(humor[[i]])) {
humor[[i]] <- as.factor(humor[[i]])
}
}
View(humor)
head(humor)
datos <- subset(humor, (Cortes_Descortes == "cortés" |
Cortes_Descortes == "descortés") &
(Mediodeexpresion == "Atenuación" |
Mediodeexpresion == "Intensificación"))
View(humor)
var1 <- table(humor$Mediodeexpresion, humor$humor)
cruze <- table(var1, var2)
var1 <- humor$Mediodeexpresion
var2 <- humor$humor
cruze <- table(var1, var2); cruze
cruce <- table(var1, var2); cruce
chisq.test(cruce)
chisq.test(cruce)$residuals
# Mosaic
library(vcd)
structable(humor$Tonema ~ humor$Mediodeexpresion)
mosaic(structable(structable(humor$Tonema ~ humor$Mediodeexpresion)))
mosaic(structable(structable(humor$Tonema ~ humor$Mediodeexpresion)), shade = T)
varD <- humor$F0_Media
varI <- humor$humor
# Boxplot, varD: numèrica, varI: factor
boxplot(varD ~ varI)
# Histograma
library(psych)
skew(var1)
var1 <- humor$F0_Media
skew(var1)
hist(var1)
library(ggplot2)
ggplot(var1)+
geom_density2d()
ggplot(var1) +
geom_density()
ggplot(var1) +
geom_histogram()
var1
skew(var1)
# Comparació de varibales
par(mfrow=c(1,2))
boxplot(var1)
hist(var1)
hist(var1)
hist(var2)
describe(x = var1)
par(mfrow = c(1,1))
par(mfrow = c(1,1))
hist(var1)
hist(var1)
hist(var1)
# Comparació de varibales
par(mfrow=c(2,1))
hist(var1)
hist(var1)
describe(x = var1)
par(mfrow = c(1,1))
# MCA
library(FactoMineR)
ls(humor)
ls(humor)
ls(humor)
mca <- MCA(humor[c(1,2,6,7)])
mca <- MCA(humor[c(1,2,6,7)], graph = T)
mca <- MCA(humor[c(1,2,8,7)], graph = T)
plot(mca, invisible=c("ind"), col.var= (palette(rainbow(10))))
dimdesc(mcadatosn)
dimdesc(mca)
library(FactoInvestigate)
Investigate(mca)
humor <- read_excel("Downloads/Alícia/Alícia_R_1/humor.xlsx")
# Histograma
library(psych)
skew(var1)
skew(humor$Silabas)
hist(humor$Silabas)
View(humor)
humor$tonema
humor$Tonema
as.factor(humor$Tonema)
# Chi-quadrat
cruce <- table(humor$humor, humor$Curva_Melodica); cruce
chisq.test(cruce)
chisq.test(cruce)$residuals
ls(humor)
View(humor)
mca <- MCA(humor[c(1,2,7,9,10,11)], graph = T)
mca <- MCA(humor[c(1,2,7,10,11)], graph = T)
plot(mca, invisible=c("ind"), col.var= (palette(rainbow(10))))
dimdesc(mca)
Investigate(mca)
mca_data <- dimdesc(mca)
mca_data$`Dim 1`
mca_data$`Dim 1`$quali
mca_data$`Dim 1`$category
mca_data$`Dim 1`$quali
mca_data
mca_data$`Dim 2`$quali
mca_data$`Dim 1`$quali
mca_data$`Dim 2`$quali
mca_data$`Dim 1`$category
mca_data$`Dim 2`$category
mca_data
View(humor)
# Chi-quadrat
cruce <- table(humor$humor, humor$Mediodeexpresion); cruce
chisq.test(cruce)
chisq.test(cruce)$residuals
View(humor)
install.packages("Bios2cor")
library(Bios2cor)
align <- import.msf(system.file("Desktop/aln_proteins.fasta", package = "Bios2cor"))
align <- import.msf(system.file("Desktop/aln_proteins.fasta"))
align <- import.msf("Desktop/aln_proteins.fasta")
library(seqinr)
align <- import.fasta("Desktop/aln_proteins.fasta")
mcbasc <- mcbasc(align, gap_ratio = 0.2)
mcbasc
View(mcbasc)
mcbasc[["score"]]
Bios2cor
comparePhylo(x, y, plot = F, force.rooted = FALSE,
use.edge.length = T)
library(ape)
x <- read.tree("07_ntt_nobp.nwk")
y <- read.tree("08_ntt_sim_nobp.nwk")
library(ape)
x <- read.tree("07_ntt_nobp.nwk")
setwd("OneDrive - Universitat de Valencia/RECERCA/PROJECTS/TFG/rubevo/cured/convergence")
x <- read.tree("07_ntt_nobp.nwk")
y <- read.tree("08_ntt_sim_nobp.nwk")
comparePhylo(x, y, plot = F, force.rooted = FALSE,
use.edge.length = T)
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = T)
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
bind.tree(x, y)
x <- read.tree("05_ntt_nobp.nwk")
y <- read.tree("06_ntt_sim_nobp.nwk")
setwd("OneDrive - Universitat de Valencia/RECERCA/PROJECTS/TFG/rubevo/cured/convergence")
x <- read.tree("05_ntt_nobp.nwk")
x <- read.tree("05_nt_nobp.nwk")
y <- read.tree("06_nt_sim_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("01_aa_nobp.nwk")
y <- read.tree("02_aa_sim_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("05_nt_nobp.nwk")
y <- read.tree("08_ntt_sim_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("03_aat_nobp.nwk")
y <- read.tree("04_aat_sim_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("06_nt_sim_nobp.nwk")
y <- read.tree("08_ntt_sim_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("05_nt_nobp.nwk")
y <- read.tree("07_ntt_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("06_nt_sim_nobp.nwk")
y <- read.tree("07_ntt_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("03_aat_nobp.nwk")
y <- read.tree("06_nt_sim_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
y <- read.tree("05_nt_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("04_aat_sim_nobp.nwk")
y <- read.tree("06_nt_sim_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("04_aat_sim_nobp.nwk")
y <- read.tree("05_nt_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("03_aat_nobp.nwk")
y <- read.tree("08_ntt_sim_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("02_aa_sim_nobp.nwk")
y <- read.tree("07_ntt_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("04_aat_sim_nobp.nwk")
y <- read.tree("08_ntt_sim_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("03_aat_nobp.nwk")
y <- read.tree("07_ntt_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("02_aa_sim_nobp.nwk")
y <- read.tree("08_ntt_sim_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("01_aa_nobp.nwk")
y <- read.tree("07_ntt_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("02_aa_sim_nobp.nwk")
y <- read.tree("05_nt_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("04_aat_sim_nobp.nwk")
y <- read.tree("07_ntt_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("01_aa_nobp.nwk")
y <- read.tree("08_ntt_sim_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("01_aa_nobp.nwk")
y <- read.tree("05_nt_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("02_aa_sim_nobp.nwk")
y <- read.tree("06_nt_sim_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("02_aa_sim_nobp.nwk")
y <- read.tree("04_aat_sim_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("02_aa_sim_nobp.nwk")
y <- read.tree("03_aat_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("01_aa_nobp.nwk")
y <- read.tree("03_aat_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("01_aa_nobp.nwk")
y <- read.tree("06_nt_sim_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
x <- read.tree("01_aa_nobp.nwk")
y <- read.tree("04_aat_sim_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
library(ape)
x <- read.tree("01_aa_nobp.nwk")
y <- read.tree("04_aat_sim_nobp.nwk")
comparePhylo(x, y, plot = T, force.rooted = T,
use.edge.length = F)
