# trees import
aa_trees <- read.newick("real/aa/no_trimmed/model_trees.nwk")
library(ape)
library(phytools)
library(phylotools)
library(phylosignal)
library(ade4)
library(adephylo)
library(phylobase)
library(treeio)
library(magrittr)
library(dplyr)
aa_trees <- read.newick("aa/no_trimmed/model_trees.nwk")
for (i in 1:length(aa_trees)) {
aa_null_branches <- which(aa_trees[[i]]$edge.length==0)
aa_trees[[1]]$edge.length[aa_null_branches]<-0.00000001
}
for (i in 1:123) aa_trees[[i]]$node.label <- NULL
library(ape)
library(phytools)
library(phylotools)
library(phylosignal)
library(ade4)
library(adephylo)
library(phylobase)
library(treeio)
library(magrittr)
library(dplyr)
aa_trees <- read.newick("aa/no_trimmed/model_trees.nwk")
for (i in 1:length(aa_trees)) {
aa_null_branches <- which(aa_trees[[i]]$edge.length==0)
aa_trees[[1]]$edge.length[aa_null_branches]<-0.00000001
}
for (i in 1:123) aa_trees[[i]]$node.label <- NULL
("aa/trimmed/model_trees.nwk")
aat_trees <- read.newick("aa/trimmed/model_trees.nwk")
nt_trees <- read.newick("nt/no_trimmed/model_trees.nwk")
aat_trees <- read.newick("aa/trimmed/model_trees.nwk")
for (i in 1:length(aat_trees)) {
aat_null_branches <- which(aat_trees[[i]]$edge.length==0)
aat_trees[[1]]$edge.length[aat_null_branches]<-0.00000001
}
aat_trees <- read.newick("aa/trimmed/model_trees.nwk")
nt_trees <- read.newick("nt/no_trimmed/model_trees.nwk")
for (i in 1:length(nt_trees)) {
nt_null_branches <- which(nt_trees[[i]]$edge.length==0)
nt_trees[[1]]$edge.length[nt_null_branches]<-0.00000001
}
for (i in 1:88) nt_trees[[i]]$node.label <- NULL
library(ape)
library(phytools)
library(phylotools)
library(phylosignal)
library(ade4)
library(adephylo)
library(phylobase)
library(treeio)
library(magrittr)
library(dplyr)
citation(ape)
citation("ape")
citation("phylosignal")
citation("stats")
version("ape")
R.version()
R.Version()
package_version("ape")
package_version(ape)
sessionInfo()
packageVersion("ape")
packageVersion("phylosignal")
packageVersion("PhyloSignal")
library(ape)
library(phytools)
library(phylotools)
library(phylosignal)
library(ade4)
library(adephylo)
library(phylobase)
library(treeio)
library(magrittr)
library(dplyr)
# trees import
aa_trees <- read.newick("nt/no_trimmed/real_nt_models_trees.nwk")
for (i in 1:length(aa_trees)) {
aa_null_branches <- which(aa_trees[[i]]$edge.length==0)
aa_trees[[1]]$edge.length[aa_null_branches]<-0.00000001
}
for (i in 1:123) aa_trees[[i]]$node.label <- NULL
for (i in 1:length(aa_trees)) {
aa_null_branches <- which(aa_trees[[i]]$edge.length==0)
aa_trees[[1]]$edge.length[aa_null_branches]<-0.00000001
}
for (i in 1:123) aa_trees[[i]]$node.label <- NULL
length(aa_trees)
aa_trees <- read.newick(file)
aa_trees <- read.newick(file)
aa_trees <- read.newick(str(file))
aa_trees <- read.newick(file = file)
# trees import
file <- "nt/no_trimmed/real_nt_models_trees.nwk"
aa_trees <- read.newick(file = file)
trees <- read.newick(file = file)
for (i in 1:length(trees)) {
aa_null_branches <- which(trees[[i]]$edge.length==0)
trees[[1]]$edge.length[aa_null_branches]<-0.00000001
}
for (i in 1:length(trees)) trees[[i]]$node.label <- NULL
aat_trees <- read.newick("aa/trimmed/model_trees.nwk")
nt_trees <- read.newick("nt/no_trimmed/real_nt_models_trees.nwk")
for (i in 1:length(nt_trees)) {
nt_null_branches <- which(nt_trees[[i]]$edge.length==0)
nt_trees[[1]]$edge.length[nt_null_branches]<-0.00000001
}
for (i in 1:88) nt_trees[[i]]$node.label <- NULL
ntt_trees <- read.newick("nt/trimmed/real_nt_trimmed_models_trees.nwk")
for (i in 1:length(ntt_trees)) {
ntt_null_branches <- which(ntt_trees[[i]]$edge.length==0)
ntt_trees[[1]]$edge.length[ntt_null_branches]<-0.00000001
}
for (i in 1:88) ntt_trees[[i]]$node.label <- NULL
for (i in 1:length(ntt_trees)) ntt_trees[[i]]$node.label <- NULL
# nucleotides
nt_sig <- data.frame("Cmean" = 1, "pval" = 1, "I" = 1,
"pval" = 1, "Lambda" = 1, "pval" = 1,
"K" = 1, "pval" = 1, "K.star" = 1, "pval" = 1)
# nucleotides
nt_sig <- data.frame("Cmean" = 1, "pval" = 1, "I" = 1,
"pval" = 1, "Lambda" = 1, "pval" = 1,
"K" = 1, "pval" = 1, "K.star" = 1, "pval" = 1)
# nucleotides
nt_sig <- data.frame("Cmean" = 1, "pval" = 1, "I" = 1,
"pval" = 1, "Lambda" = 1, "pval" = 1,
"K" = 1, "pval" = 1, "K.star" = 1, "pval" = 1)
for (i in 1:length(nt_trees)) {
t <- phylo4d(nt_trees[[i]])
# random
tipData(t)$rand <- rnorm(length(nt_trees[[i]]))
# signal
tipData(t)$BM <- rTraitCont(as(t, "phylo"), model = "BM")
a <- phyloSignal(t)
nt_sig <- rbind(nt_sig, c(a$stat$Cmean[2], a$pvalue$Cmean[2], a$stat$I[2], a$pvalue$I[2],
a$stat$Lambda[2], a$pvalue$Lambda[2], a$stat$K[2], a$pvalue$K[2],
a$stat$K.star[2], a$pvalue$K.star[2]))
}
for (i in 1:length(nt_trees)) {
t <- phylo4d(nt_trees[[i]])
# random
tipData(t)$rand <- rnorm(length(nt_trees[[i]]))
# signal
tipData(t)$BM <- rTraitCont(as(t, "phylo"), model = "BM")
a <- phyloSignal(t)
nt_sig <- rbind(nt_sig, c(a$stat$Cmean[2], a$pvalue$Cmean[2], a$stat$I[2], a$pvalue$I[2],
a$stat$Lambda[2], a$pvalue$Lambda[2], a$stat$K[2], a$pvalue$K[2],
a$stat$K.star[2], a$pvalue$K.star[2]))
}
for (i in 1:length(nt_trees)) {
t <- phylo4d(nt_trees[[i]])
# random
tipData(t)$rand <- rnorm(length(nt_trees[[i]]))
# signal
tipData(t)$BM <- rTraitCont(as(t, "phylo"), model = "BM")
a <- phyloSignal(t)
nt_sig <- rbind(nt_sig, c(a$stat$Cmean[2], a$pvalue$Cmean[2], a$stat$I[2], a$pvalue$I[2],
a$stat$Lambda[2], a$pvalue$Lambda[2], a$stat$K[2], a$pvalue$K[2],
a$stat$K.star[2], a$pvalue$K.star[2]))
}
write.table(file = "nt/no_trimmed/nt_phylogenetic_signals.csv", x = nt_sig, sep = ";", dec = ".")
i <- 1
t <- phylo4d(nt_trees[[i]])
# random
tipData(t)$rand <- rnorm(length(nt_trees[[i]]))
# random
tipData(t)$rand <- rnorm(length(nt_trees[[i]]))
nt_trees[[i]]
root.multiPhylo(ntt_trees, outgroup = "758802_AQT80891_rbcL")
ntt_sig <- data.frame("Cmean" = 1, "pval" = 1, "I" = 1,
"pval" = 1, "Lambda" = 1, "pval" = 1,
"K" = 1, "pval" = 1, "K.star" = 1, "pval" = 1)
for (i in 1:length(ntt_trees)) {
t <- phylo4d(ntt_trees[[i]])
# random
tipData(t)$rand <- rnorm(length(ntt_trees[[i]]))
# signal
tipData(t)$BM <- rTraitCont(as(t, "phylo"), model = "BM")
a <- phyloSignal(t)
ntt_sig <- rbind(ntt_sig, c(a$stat$Cmean[2], a$pvalue$Cmean[2], a$stat$I[2], a$pvalue$I[2],
a$stat$Lambda[2], a$pvalue$Lambda[2], a$stat$K[2], a$pvalue$K[2],
a$stat$K.star[2], a$pvalue$K.star[2]))
}
t <- phylo4d(ntt_trees[[i]])
# random
tipData(t)$rand <- rnorm(length(ntt_trees[[i]]))
# random
tipData(t)$rand <- rnorm(length(ntt_trees[[i]]$tip.label))
# signal
tipData(t)$BM <- rTraitCont(as(t, "phylo"), model = "BM")
a <- phyloSignal(t)
length(aa_trees)
# nucleotides
nt_sig <- data.frame("Cmean" = 1, "pval" = 1, "I" = 1,
"pval" = 1, "Lambda" = 1, "pval" = 1,
"K" = 1, "pval" = 1, "K.star" = 1, "pval" = 1)
for (i in 1:length(nt_trees)) {
t <- phylo4d(nt_trees[[i]])
# random
tipData(t)$rand <- rnorm(length(nt_trees[[i]]$tip.label))
# signal
tipData(t)$BM <- rTraitCont(as(t, "phylo"), model = "BM")
a <- phyloSignal(t)
nt_sig <- rbind(nt_sig, c(a$stat$Cmean[2], a$pvalue$Cmean[2], a$stat$I[2], a$pvalue$I[2],
a$stat$Lambda[2], a$pvalue$Lambda[2], a$stat$K[2], a$pvalue$K[2],
a$stat$K.star[2], a$pvalue$K.star[2]))
}
nt_sig
write.table(file = "nt/no_trimmed/nt_phylogenetic_signals.csv", x = nt_sig, sep = ";", dec = ".")
ntt_sig <- data.frame("Cmean" = 1, "pval" = 1, "I" = 1,
"pval" = 1, "Lambda" = 1, "pval" = 1,
"K" = 1, "pval" = 1, "K.star" = 1, "pval" = 1)
for (i in 1:length(ntt_trees)) {
t <- phylo4d(ntt_trees[[i]])
# random
tipData(t)$rand <- rnorm(length(ntt_trees[[i]]$tip.label))
# signal
tipData(t)$BM <- rTraitCont(as(t, "phylo"), model = "BM")
a <- phyloSignal(t)
ntt_sig <- rbind(ntt_sig, c(a$stat$Cmean[2], a$pvalue$Cmean[2], a$stat$I[2], a$pvalue$I[2],
a$stat$Lambda[2], a$pvalue$Lambda[2], a$stat$K[2], a$pvalue$K[2],
a$stat$K.star[2], a$pvalue$K.star[2]))
}
head(ntt_sig)
View(ntt_sig)
for (i in 1:length(ntt_trees)) {
t <- phylo4d(ntt_trees[[i]])
# random
tipData(t)$rand <- rnorm(length(ntt_trees[[i]]$tip.label))
# signal
tipData(t)$BM <- rTraitCont(as(t, "phylo"), model = "BM")
a <- phyloSignal(t)
ntt_sig <- rbind(ntt_sig, c(a$stat$Cmean[2], a$pvalue$Cmean[2], a$stat$I[2], a$pvalue$I[2],
a$stat$Lambda[2], a$pvalue$Lambda[2], a$stat$K[2], a$pvalue$K[2],
a$stat$K.star[2], a$pvalue$K.star[2]))
}; ntt_sig <- ntt_sig[-1,]; head(ntt_sig)
ntt_sig <- data.frame("Cmean" = 1, "pval" = 1, "I" = 1,
"pval" = 1, "Lambda" = 1, "pval" = 1,
"K" = 1, "pval" = 1, "K.star" = 1, "pval" = 1)
for (i in 1:length(ntt_trees)) {
t <- phylo4d(ntt_trees[[i]])
# random
tipData(t)$rand <- rnorm(length(ntt_trees[[i]]$tip.label))
# signal
tipData(t)$BM <- rTraitCont(as(t, "phylo"), model = "BM")
a <- phyloSignal(t)
ntt_sig <- rbind(ntt_sig, c(a$stat$Cmean[2], a$pvalue$Cmean[2], a$stat$I[2], a$pvalue$I[2],
a$stat$Lambda[2], a$pvalue$Lambda[2], a$stat$K[2], a$pvalue$K[2],
a$stat$K.star[2], a$pvalue$K.star[2]))
}; ntt_sig <- ntt_sig[-1,]; head(ntt_sig)
write.table(file = "nt/trimmed/ntt_phylogenetic_signals.csv", x = ntt_sig, sep = ";", dec = ".")
# nucleotides
nt_sig <- data.frame("Cmean" = 1, "pval" = 1, "I" = 1,
"pval" = 1, "Lambda" = 1, "pval" = 1,
"K" = 1, "pval" = 1, "K.star" = 1, "pval" = 1)
for (i in 1:length(nt_trees)) {
t <- phylo4d(nt_trees[[i]])
# random
tipData(t)$rand <- rnorm(length(nt_trees[[i]]$tip.label))
# signal
tipData(t)$BM <- rTraitCont(as(t, "phylo"), model = "BM")
a <- phyloSignal(t)
nt_sig <- rbind(nt_sig, c(a$stat$Cmean[2], a$pvalue$Cmean[2], a$stat$I[2], a$pvalue$I[2],
a$stat$Lambda[2], a$pvalue$Lambda[2], a$stat$K[2], a$pvalue$K[2],
a$stat$K.star[2], a$pvalue$K.star[2]))
}; ntt_sig <- ntt_sig[-1,]; head(nt_sig)
write.table(file = "nt/no_trimmed/nt_phylogenetic_signals.csv", x = nt_sig, sep = ";", dec = ".")
write.table(file = "nt/no_trimmed/nt_phylogenetic_signals.csv", x = nt_sig, sep = ",", dec = ".")
write.table(file = "nt/trimmed/ntt_phylogenetic_signals.csv", x = ntt_sig, sep = ",", dec = ".")
for (i in 1:length(ntt_trees)) {
t <- phylo4d(ntt_trees[[i]])
# random
tipData(t)$rand <- rnorm(length(ntt_trees[[i]]$tip.label))
# signal
tipData(t)$BM <- rTraitCont(as(t, "phylo"), model = "BM")
a <- phyloSignal(t)
ntt_sig <- rbind(ntt_sig, c(a$stat$Cmean[2], a$pvalue$Cmean[2], a$stat$I[2], a$pvalue$I[2],
a$stat$Lambda[2], a$pvalue$Lambda[2], a$stat$K[2], a$pvalue$K[2],
a$stat$K.star[2], a$pvalue$K.star[2]))
}; ntt_sig <- ntt_sig[-1,]; head(ntt_sig)
write.table(file = "nt/trimmed/ntt_phylogenetic_signals.csv", x = ntt_sig, sep = ",", dec = ".")
ntt_sig <- data.frame("Cmean" = 1, "pval" = 1, "I" = 1,
"pval" = 1, "Lambda" = 1, "pval" = 1,
"K" = 1, "pval" = 1, "K.star" = 1, "pval" = 1)
for (i in 1:length(ntt_trees)) {
t <- phylo4d(ntt_trees[[i]])
# random
tipData(t)$rand <- rnorm(length(ntt_trees[[i]]$tip.label))
# signal
tipData(t)$BM <- rTraitCont(as(t, "phylo"), model = "BM")
a <- phyloSignal(t)
ntt_sig <- rbind(ntt_sig, c(a$stat$Cmean[2], a$pvalue$Cmean[2], a$stat$I[2], a$pvalue$I[2],
a$stat$Lambda[2], a$pvalue$Lambda[2], a$stat$K[2], a$pvalue$K[2],
a$stat$K.star[2], a$pvalue$K.star[2]))
}; ntt_sig <- ntt_sig[-1,]; head(ntt_sig)
write.table(file = "nt/trimmed/ntt_phylogenetic_signals.csv", x = ntt_sig, sep = ",", dec = ".")
# nucleotides
nt_sig <- data.frame("Cmean" = 1, "pval" = 1, "I" = 1,
"pval" = 1, "Lambda" = 1, "pval" = 1,
"K" = 1, "pval" = 1, "K.star" = 1, "pval" = 1)
for (i in 1:length(nt_trees)) {
t <- phylo4d(nt_trees[[i]])
# random
tipData(t)$rand <- rnorm(length(nt_trees[[i]]$tip.label))
# signal
tipData(t)$BM <- rTraitCont(as(t, "phylo"), model = "BM")
a <- phyloSignal(t)
nt_sig <- rbind(nt_sig, c(a$stat$Cmean[2], a$pvalue$Cmean[2], a$stat$I[2], a$pvalue$I[2],
a$stat$Lambda[2], a$pvalue$Lambda[2], a$stat$K[2], a$pvalue$K[2],
a$stat$K.star[2], a$pvalue$K.star[2]))
}; nt_sig <- nt_sig[-1,]; head(nt_sig)
write.table(file = "nt/no_trimmed/nt_phylogenetic_signals.csv", x = nt_sig, sep = ",", dec = ".")
