library(ape)
library(phytools)
library(phylotools)
library(phylosignal)
library(ade4)
library(adephylo)
library(phylobase)
library(treeio)
library(magrittr)
library(dplyr)
# trees import
aa_trees <- read.newick("real/aa/no_trimmed/model_trees.nwk")
aa_null_branches <- which(tree$edge.length==0)
aa_null_branches <- which(aa_trees$edge.length==0)
aa_null_branches <- which(aa_trees[[1]]$edge.length==0)
aa_null_branches <- which(aa_trees[[2]]$edge.length==0)
aaa_trees[[1]]
aa_trees[[1]]
for (i in 1:length(aa_trees)) {
aa_null_branches <- which(aa_trees[[i]]$edge.length==0)
aa_trees[[1]]$edge.length[aa_null_branches]<-0.00000001
}
for (i in 1:123) aa_trees[[i]]$node.label <- NULL
for (i in 1:length(aa_trees)) {
aa_null_branches <- which(aa_trees[[i]]$edge.length==0)
aa_trees[[1]]$edge.length[aa_null_branches]<-0.00000001
}
aa_null_branches <- which(aa_trees[[i]]$edge.length==0)
i <- 2
aa_null_branches <- which(aa_trees[[i]]$edge.length==0)
which(aa_trees[[i]]$edge.length==0)
i <- 3
which(aa_trees[[i]]$edge.length==0)
which(aa_trees[[i]]$edge.length==0)
which(aa_trees[[1]]$edge.length==0)
which(aa_trees[[2]]$edge.length==0)
which(aa_trees[[3]]$edge.length==0)
which(aa_trees[[4]]$edge.length==0)
which(aa_trees[[5]]$edge.length==0)
for (i in 1:123) aa_trees[[i]]$node.label <- NULL
# phylogenetic signal table
## generating random distribution tree
# amino acid
aa_sig <- data.frame("Cmean" = 1, "pval" = 1, "I" = 1,
"pval" = 1, "Lambda" = 1, "pval" = 1,
"K" = 1, "pval" = 1, "K.star" = 1, "pval" = 1)
t <- phylo4d(aa_trees[[i]])
for (i in 1:123) {
t <- phylo4d(aa_trees[[i]])
# random
tipData(t)$rand <- rnorm(48)
# signal
tipData(t)$BM <- rTraitCont(as(t, "phylo"), model = "BM")
a <- phyloSignal(t)
aa_sig <- rbind(aa_sig, c(a$stat$Cmean[2], a$pvalue$Cmean[2], a$stat$I[2], a$pvalue$I[2],
a$stat$Lambda[2], a$pvalue$Lambda[2], a$stat$K[2], a$pvalue$K[2],
a$stat$K.star[2], a$pvalue$K.star[2]))
}
View(aa_sig)
library(ape)
library(phytools)
library(phylotools)
library(phylosignal)
library(ade4)
library(adephylo)
library(phylobase)
library(treeio)
library(magrittr)
library(dplyr)
library(stringi)
treename <- "aa_sim"
phy <- read.newick("simulated/aa_sim_model_trees_sorted.nwk")
for (i in 1:length(phy)) {
phy_null <- which(phy[[i]]$edge.length==0)
phy[[1]]$edge.length[phy_null]<-0.00000001
}
for (i in 1:length(phy)) phy[[i]]$node.label <- NULL
physig <- data.frame("Cmean" = 1, "pval" = 1, "I" = 1,
"pval" = 1, "Lambda" = 1, "pval" = 1,
"K" = 1, "pval" = 1, "K.star" = 1, "pval" = 1)
for (i in 1:length(phy)) {
t <- phylo4d(phy[[i]])
tipLabels(t) <- stri_rand_strings(length(t@label), 3, pattern = "[A-Za-z]")
tipData(t)$rand <- rnorm(length(t@label))
tipData(t)$BM <- rTraitCont(as(t, "phylo"), model = "BM")
a <- phyloSignal(t)
physig <- rbind(physig, c(a$stat$Cmean[2], a$pvalue$Cmean[2], a$stat$I[2], a$pvalue$I[2],
a$stat$Lambda[2], a$pvalue$Lambda[2], a$stat$K[2], a$pvalue$K[2],
a$stat$K.star[2], a$pvalue$K.star[2]))
}; physig <- physig[-1,]; head(physig)
write.csv(physig, file = paste(treename, "_phylosig.csv"))
phy <- read.newick("simulated/aat_sim_model_trees_sorted.nwk")
for (i in 1:length(phy)) {
phy_null <- which(phy[[i]]$edge.length==0)
phy[[1]]$edge.length[phy_null]<-0.00000001
}
library(ape)
library(phytools)
library(phylotools)
library(phylosignal)
library(ade4)
library(adephylo)
library(phylobase)
library(treeio)
library(magrittr)
library(dplyr)
library(stringi)
treename <- "aat_sim"
phy <- read.newick("simulated/aat_sim_model_trees_sorted.nwk")
for (i in 1:length(phy)) {
phy_null <- which(phy[[i]]$edge.length==0)
phy[[1]]$edge.length[phy_null]<-0.00000001
}
for (i in 1:length(phy)) phy[[i]]$node.label <- NULL
physig <- data.frame("Cmean" = 1, "pval" = 1, "I" = 1,
"pval" = 1, "Lambda" = 1, "pval" = 1,
"K" = 1, "pval" = 1, "K.star" = 1, "pval" = 1)
for (i in 1:length(phy)) {
t <- phylo4d(phy[[i]])
tipLabels(t) <- stri_rand_strings(length(t@label), 3, pattern = "[A-Za-z]")
tipData(t)$rand <- rnorm(length(t@label))
tipData(t)$BM <- rTraitCont(as(t, "phylo"), model = "BM")
a <- phyloSignal(t)
physig <- rbind(physig, c(a$stat$Cmean[2], a$pvalue$Cmean[2], a$stat$I[2], a$pvalue$I[2],
a$stat$Lambda[2], a$pvalue$Lambda[2], a$stat$K[2], a$pvalue$K[2],
a$stat$K.star[2], a$pvalue$K.star[2]))
}; physig <- physig[-1,]; head(physig)
write.csv(physig, file = paste(treename, "_phylosig.csv", sep = ""))
